/* global p5 */
let p = new p5(() => {});
let backgroundColor, bHome, bHowToPlay, bRefresh, i, j, x, y;
const canvas = document.getElementById('2048');
let ctx = canvas.getContext('2d');

p.setup = function(){
  // Canvas & color settings
  p.createCanvas(600, 650);
  p.colorMode(p.HSB, 200, 100, 100);
  backgroundColor = p.color(25, 50, 80);
  //home button
  bHome = p.createButton('Home');
  bHome.style('background-color', 'black');
  bHome.style('color', 'white');
  bHome.position(p.width/50, 15);
  bHome.mouseClicked(returnHome);
  
  bHowToPlay = p.createButton('How To Play');
  bHowToPlay.style('background-color', 'black');
  bHowToPlay.style('color', 'white');
  bHowToPlay.position(p.width/50 + 55, 15);
  bHowToPlay.mouseClicked(howToPlay);
  
  bRefresh = p.createButton('Restart Game');
  bRefresh.style('background-color', 'black');
  bRefresh.style('color', 'white');
  bRefresh.position(p.width/50 + 150, 15);
  bRefresh.mouseClicked(refresh);

p.draw = function(){
  //p.background(backgroundColor);
  //box behind grid
  /*p.fill(25,100,25);
  p.noStroke();
  p.rect(0,0,545,565);*/
  //grid
  //let BackgroundGrid = new Grid(4);

  if(loss){
  p.textSize(32);
  p.textAlign(p.CENTER, p.CENTER);
  p.text('GAME OVER.', .4 * p.width, .04 * p.height);
    
  }
}
  
   
function returnHome(){
   window.location.replace('https://cssi-final-project-abs.glitch.me/');
}
  
function howToPlay(){
   window.location.replace('https://cssi-final-project-abs.glitch.me/twentyfourtyHTP.html');
}
  
function refresh(){
   window.location.replace('https://cssi-final-project-abs.glitch.me/twentyfourtyeight.html');
}
/*  
  //row and column number
class Grid {
  constructor(r){
    //grid colors
    p.fill(25,100,70);
    p.stroke(25,100,50);
    p.strokeWeight(10);
    //create rows
    x = 0;
    y = 0;
    for (i = 0; i <= (r-1); i++){
      p.rect(45+x,50,((p.width-100)/4),(p.height-100)/4);
      p.rect(45+x,60+((p.height-100)/4),((p.width-100)/4),(p.height-100)/4);
      p.rect(45+x,190+((p.height-100)/4),((p.width-100)/4),(p.height-100)/4);
      p.rect(45+x,325+((p.height-100)/4),((p.width-100)/4),(p.height-100)/4);
      x += ((p.width-100)/4);
    };
  };
};*/

//var canvas = document.getElementById('canvas');
var ctx = canvas.getContext('2d');
var sizeInput = document.getElementById('size');
var changeSize = document.getElementById('change-size');
var scoreLabel = document.getElementById('score');
var score = 0;
var size = 4;
var width = canvas.width / size - 6;
let cells = [];
var fontSize;
var loss = false;
ctx.fillStyle = '#E3B491';
ctx.fillRect = (cell.x, cell.y, 545, 565);
startGame();

function size() {
  if (sizeInput.value >= 2 && sizeInput.value <= 20) {
    size = sizeInput.value;
    width = canvas.width / size - 6;
    console.log(sizeInput.value);
    canvasClean();
    startGame();
  }
}

function cell(row, coll) {
  this.value = 0;
  this.x = coll * width + 5 * (coll + 1);
  this.y = row * width + 5 * (row + 1);
}

function createCells() {
  var i, j;
  for(i = 0; i < 4; i++) {
    cells[i] = [];
    for(j = 0; j < size; j++) {
      cells[i][j] = new cell(i, j);
    }
  }
}

function drawCell(cell) {
  ctx.beginPath();
  ctx.strokeStyle = 'black';
  ctx.strokeRect(cell.x, cell.y, width, width);
  ctx.fillStyle = '#9D8580';
  ctx.rect(cell.x, cell.y, width, width);
  switch (cell.value){ 
    case 0 : ctx.fillStyle = '#A77564'; break;
    case 2 : ctx.fillStyle = '#DF6810'; break;
    case 4 : ctx.fillStyle = '#F6E672'; break;
    case 8 : ctx.fillStyle = '#9ACD05'; break;
    case 16 : ctx.fillStyle = '#05A699'; break;
    case 32 : ctx.fillStyle = '#005FFF'; break;
    case 64 : ctx.fillStyle = '#00bfff'; break;
    case 128 : ctx.fillStyle = '#FF7F50'; break;
    case 256 : ctx.fillStyle = '#5A00FF'; break;
    case 512 : ctx.fillStyle = '#ff0080'; break;
    case 1024 : ctx.fillStyle = '#F092E6'; break;
    case 2048 : ctx.fillStyle = '#ABA1AA'; break;
    case 4096 : ctx.fillStyle = '#8F0F0F'; break;
    default : ctx.fillStyle = 'black';
  }
  ctx.fill();
  if (cell.value) {
    fontSize = width / 2;
    ctx.font = fontSize + 'px Arial';
    ctx.fillStyle = 'white';
    ctx.textAlign = 'center';
    //ctx.fillText(cell.value, cell.x + width / 2, cell.y + width / 2 + width/7);
  }
}

function canvasClean() {
  ctx.clearRect(0, 0, 500, 500);
}

document.onkeydown = function (event) {
  if (!loss) {
    if (event.keyCode === 38 || event.keyCode === 87) {
      moveUp(); 
    } else if (event.keyCode === 39 || event.keyCode === 68) {
      moveRight();
    } else if (event.keyCode === 40 || event.keyCode === 83) {
      moveDown(); 
    } else if (event.keyCode === 37 || event.keyCode === 65) {
      moveLeft(); 
    }
    //scoreLabel.innerHTML = 'Score : ' + score;
  }
}

function startGame() {
  createCells();
  drawAllCells();
  pasteNewCell();
  pasteNewCell();
}

function finishGame() {
  canvas.style.opacity = '0.5';
  loss = true;
}

function drawAllCells() {
  var i, j;
  for(i = 0; i < size; i++) {
    for(j = 0; j < size; j++) {
      drawCell(cells[i][j]);
    }
  }
}

function pasteNewCell() {
  var countFree = 0;
  var i, j;
  for(i = 0; i < size; i++) {
    for(j = 0; j < size; j++) {
      if(!cells[i][j].value) {
        countFree++;
      }
    }
  }
  if(!countFree) {
    finishGame();
    return;
  }
  while(true) {
    var row = Math.floor(Math.random() * size);
    var coll = Math.floor(Math.random() * size);
    if(!cells[row][coll].value) {
      cells[row][coll].value = 2 * Math.ceil(Math.random() * 2);
      drawAllCells();
      return;
    }
  }
}

function moveRight () {
  var i, j;
  var coll;
  for(i = 0; i < size; i++) {
    for(j = size - 2; j >= 0; j--) {
      if(cells[i][j].value) {
        coll = j;
        while (coll + 1 < size) {
          if (!cells[i][coll + 1].value) {
            cells[i][coll + 1].value = cells[i][coll].value;
            cells[i][coll].value = 0;
            coll++;
          } else if (cells[i][coll].value == cells[i][coll + 1].value) {
            cells[i][coll + 1].value *= 2;
            score +=  cells[i][coll + 1].value;
            cells[i][coll].value = 0;
            break;
          } else {
            break;
          }
        }
      }
    }
  }
  pasteNewCell();
}

function moveLeft() {
  var i, j;
  var coll;
  for(i = 0; i < size; i++) {
    for(j = 1; j < size; j++) {
      if(cells[i][j].value) {
        coll = j;
        while (coll - 1 >= 0) {
          if (!cells[i][coll - 1].value) {
            cells[i][coll - 1].value = cells[i][coll].value;
            cells[i][coll].value = 0;
            coll--;
          } else if (cells[i][coll].value == cells[i][coll - 1].value) {
            cells[i][coll - 1].value *= 2;
            score +=   cells[i][coll - 1].value;
            cells[i][coll].value = 0;
            break;
          } else {
            break; 
          }
        }
      }
    }
  }
  pasteNewCell();
}

function moveUp() {
  var i, j, row;
  for(j = 0; j < size; j++) {
    for(i = 1; i < size; i++) {
      if(cells[i][j].value) {
        row = i;
        while (row > 0) {
          if(!cells[row - 1][j].value) {
            cells[row - 1][j].value = cells[row][j].value;
            cells[row][j].value = 0;
            row--;
          } else if (cells[row][j].value == cells[row - 1][j].value) {
            cells[row - 1][j].value *= 2;
            score +=  cells[row - 1][j].value;
            cells[row][j].value = 0;
            break;
          } else {
            break; 
          }
        }
      }
    }
  }
  pasteNewCell();
}

function moveDown() {
  var i, j, row;
  for(j = 0; j < size; j++) {
    for(i = size - 2; i >= 0; i--) {
      if(cells[i][j].value) {
        row = i;
        while (row + 1 < size) {
          if (!cells[row + 1][j].value) {
            cells[row + 1][j].value = cells[row][j].value;
            cells[row][j].value = 0;
            row++;
          } else if (cells[row][j].value == cells[row + 1][j].value) {
            cells[row + 1][j].value *= 2;
            score +=  cells[row + 1][j].value;
            cells[row][j].value = 0;
            break;
          } else {
            break; 
          }
        }
      }
    }
  }
  pasteNewCell();
}
}
